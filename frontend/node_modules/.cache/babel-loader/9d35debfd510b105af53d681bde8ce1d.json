{"ast":null,"code":"var _jsxFileName = \"/app/src/routes/Routes.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { dashboard as dashboardRoutes, auth as authRoutes } from \"./index\";\nimport DashboardLayout from \"../layouts/Dashboard\";\nimport AuthLayout from \"../layouts/Auth\";\nimport Page404 from \"../pages/auth/Page404\";\nimport AuthenticatedRoute from './AuthenticatedRoute';\nimport UnauthenticatedRoute from './UnauthenticatedRoute';\n\nconst childRoutes = (RouteComponent, Layout, routes) => routes.map(({\n  children,\n  path,\n  component: Component\n}, index) => children ? // Route item with children\nchildren.map(({\n  path,\n  component: Component\n}, index) => /*#__PURE__*/React.createElement(RouteComponent, {\n  key: index,\n  path: path,\n  exact: true,\n  render: props => /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }))),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n})) :\n/*#__PURE__*/\n// Route item without children\nReact.createElement(RouteComponent, {\n  key: index,\n  path: path,\n  exact: true,\n  render: props => /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }))),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}));\n\nconst Routes = () => /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }\n}, childRoutes(AuthenticatedRoute, DashboardLayout, dashboardRoutes), childRoutes(UnauthenticatedRoute, AuthLayout, authRoutes), /*#__PURE__*/React.createElement(Route, {\n  render: () => /*#__PURE__*/React.createElement(AuthLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Page404, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n})));\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.users.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Routes);","map":{"version":3,"sources":["/app/src/routes/Routes.js"],"names":["React","connect","BrowserRouter","Router","Route","Switch","dashboard","dashboardRoutes","auth","authRoutes","DashboardLayout","AuthLayout","Page404","AuthenticatedRoute","UnauthenticatedRoute","childRoutes","RouteComponent","Layout","routes","map","children","path","component","Component","index","props","Routes","mapStateToProps","state","isAuthenticated","users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,SAAS,IAAIC,eAAtB,EAAuCC,IAAI,IAAIC,UAA/C,QAAiE,SAAjE;AAEA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAGA,MAAMC,WAAW,GAAG,CAACC,cAAD,EAAiBC,MAAjB,EAAyBC,MAAzB,KAClBA,MAAM,CAACC,GAAP,CAAW,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,SAAS,EAAEC;AAA7B,CAAD,EAA2CC,KAA3C,KACTJ,QAAQ,GACN;AACAA,QAAQ,CAACD,GAAT,CAAa,CAAC;AAAEE,EAAAA,IAAF;AAAQC,EAAAA,SAAS,EAAEC;AAAnB,CAAD,EAAiCC,KAAjC,kBACX,oBAAC,cAAD;AACE,EAAA,GAAG,EAAEA,KADP;AAEE,EAAA,IAAI,EAAEH,IAFR;AAGE,EAAA,KAAK,MAHP;AAIE,EAAA,MAAM,EAAEI,KAAK,iBACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFM;AAAA;AAeN;AACA,oBAAC,cAAD;AACE,EAAA,GAAG,EAAED,KADP;AAEE,EAAA,IAAI,EAAEH,IAFR;AAGE,EAAA,KAAK,MAHP;AAIE,EAAA,MAAM,EAAEI,KAAK,iBACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAjBJ,CADF;;AAgCA,MAAMC,MAAM,GAAG,mBACb,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGX,WAAW,CAACF,kBAAD,EAAqBH,eAArB,EAAsCH,eAAtC,CADd,EAEGQ,WAAW,CAACD,oBAAD,EAAuBH,UAAvB,EAAmCF,UAAnC,CAFd,eAGE,oBAAC,KAAD;AACE,EAAA,MAAM,EAAE,mBACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CADF,CADF;;AAgBA,MAAMkB,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,eAAe,EAAED,KAAK,CAACE,KAAN,CAAYD;AADG,CAAL,CAA7B;;AAIA,eAAe5B,OAAO,CAAC0B,eAAD,CAAP,CAAyBD,MAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { dashboard as dashboardRoutes, auth as authRoutes } from \"./index\";\r\n\r\nimport DashboardLayout from \"../layouts/Dashboard\";\r\nimport AuthLayout from \"../layouts/Auth\";\r\nimport Page404 from \"../pages/auth/Page404\";\r\nimport AuthenticatedRoute from './AuthenticatedRoute';\r\nimport UnauthenticatedRoute from './UnauthenticatedRoute';\r\n\r\n\r\nconst childRoutes = (RouteComponent, Layout, routes) => (\r\n  routes.map(({ children, path, component: Component }, index) =>\r\n    children ? (\r\n      // Route item with children\r\n      children.map(({ path, component: Component }, index) => (\r\n        <RouteComponent\r\n          key={index}\r\n          path={path}\r\n          exact\r\n          render={props => (\r\n            <Layout>\r\n              <Component {...props} />\r\n            </Layout>\r\n          )}\r\n        />\r\n      ))\r\n    ) : (\r\n      // Route item without children\r\n      <RouteComponent\r\n        key={index}\r\n        path={path}\r\n        exact\r\n        render={props => (\r\n          <Layout>\r\n            <Component {...props} />\r\n          </Layout>\r\n        )}\r\n      />\r\n    )\r\n  )\r\n);\r\n\r\nconst Routes = () => (\r\n  <Router>\r\n    <Switch>\r\n      {childRoutes(AuthenticatedRoute, DashboardLayout, dashboardRoutes)}\r\n      {childRoutes(UnauthenticatedRoute, AuthLayout, authRoutes)}\r\n      <Route\r\n        render={() => (\r\n          <AuthLayout>\r\n            <Page404 />\r\n          </AuthLayout>\r\n        )}\r\n      />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.users.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Routes);\r\n"]},"metadata":{},"sourceType":"module"}